/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphicalinterface;

import business.Product;
import business.ProductCatalog;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varsha
 */
public class CustomerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private ProductCatalog productCatalog;
    CustomerWorkAreaJPanel(JPanel userProcessContainer, ProductCatalog productCatalog) {
       initComponents(); 
       this.userProcessContainer= userProcessContainer;
       this.productCatalog=productCatalog;
       txtSearch.setEnabled(true);
       populateTable();
    }
 private void populateTable() 
    {
        DefaultTableModel dtm=(DefaultTableModel)tblProduct.getModel();
        dtm.setRowCount(0);
        for(Product product : productCatalog.getProduct())
        {
            Object obj[]= new Object[3];
            obj[0]=product;
            obj[1]=product.getProdName();
            obj[2]=product.getModelNumber();
            
            dtm.addRow(obj);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnViewProductDetails = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        JComboBox = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        searchProd = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor Name", "Product Name", "Model Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProduct);

        jScrollPane1.setViewportView(jScrollPane2);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 72, 441, 148));

        btnViewProductDetails.setText("View Details");
        btnViewProductDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductDetailsActionPerformed(evt);
            }
        });
        add(btnViewProductDetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 238, 133, 40));

        jLabel1.setText("Search By:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 312, 133, 20));

        jLabel2.setText("Enter details here:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 359, 133, 30));
        add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 359, 154, 30));

        JComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vendor Name", "Product Name", "Model Number", "Keywords", "Feature", "Lowest Price", "Others", "Product Type" }));
        JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxActionPerformed(evt);
            }
        });
        add(JComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 312, 154, 29));

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 428, 116, 31));

        searchProd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Computer", "Printer", "HW parts", "SW parts" }));
        searchProd.setEnabled(false);
        add(searchProd, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 312, 138, 29));

        jLabel3.setText("select the product type:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(351, 312, -1, 29));
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewProductDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductDetailsActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblProduct.getSelectedRow();
        if(selectedRow<0)
        {
            JOptionPane.showMessageDialog(null,"Please select any row!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Product prod = (Product)tblProduct.getValueAt(selectedRow,0);
            ViewProductDetailsJPanel viewProduct= new ViewProductDetailsJPanel (userProcessContainer, prod);
            userProcessContainer.add("ViewProductDetailsJPanel",viewProduct);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnViewProductDetailsActionPerformed

    private void JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxActionPerformed
        // TODO add your handling code here:
        String item = (String)JComboBox.getSelectedItem();
        if(item.equalsIgnoreCase("Product Type"))
                {
                    searchProd.setEnabled(true);
                }
        else
            searchProd.setEnabled(false);
        
        if(((String)searchProd.getSelectedItem()).equalsIgnoreCase("Product Type")
                ||(((String)searchProd.getSelectedItem()).equalsIgnoreCase("Lowest Price")))
        {
            txtSearch.setEditable(false);
        }
        else
            txtSearch.setEditable(true);
            
    }//GEN-LAST:event_JComboBoxActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:

        String item=(String)JComboBox.getSelectedItem();
        if(item.equalsIgnoreCase("Product Name"))
        {
           if(!txtSearch.getText().isEmpty())
           {
                    productCatalog.searchByName(txtSearch.getText());
            if(!productCatalog.getProd().isEmpty()){
                SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
                userProcessContainer.add("SearchResultJPanel",viewDetails);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                 }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
           }
           else
           {
             JOptionPane.showMessageDialog(null,"Enter the search criteria! ");
           }
        }

        if(item.equalsIgnoreCase("Model Number"))
        {
            if(!txtSearch.getText().isEmpty())
           {
             productCatalog.searchByModelNumber(txtSearch.getText());
             if(!productCatalog.getProd().isEmpty()){
                SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
                userProcessContainer.add("SearchResultJPanel",viewDetails);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
             }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
             }
           else
           {
             JOptionPane.showMessageDialog(null,"Enter the search criteria! ");
           }
        }

        if(item.equalsIgnoreCase("Vendor Name"))
        {
             if(!txtSearch.getText().isEmpty())
           {
            productCatalog.searchByVendorName(txtSearch.getText());
            if(!productCatalog.getProd().isEmpty()){
                SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
                userProcessContainer.add("SearchResultJPanel",viewDetails);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
                 }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
            }
           else
           {
             JOptionPane.showMessageDialog(null,"Enter the search criteria! ");
           } 
        }

        if(item.equalsIgnoreCase("Lowest Price"))
        {
           
            //Product result = productCatalog.searchByLowestPrice();
           // System.out.println(result);
           // if(result!=null){
           /* ViewProductDetailsJPanel viewDetails= new ViewProductDetailsJPanel (userProcessContainer, result);
            userProcessContainer.add("ViewProductDetailsJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);*/
            productCatalog.searchByLowestPrice();
            if(!productCatalog.getProd().isEmpty()){
           SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
                userProcessContainer.add("SearchResultJPanel",viewDetails);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
             }
        else
           {
                JOptionPane.showMessageDialog(null,"No Records Found!");
            }
            
        }

        if(item.equalsIgnoreCase("Keywords"))
        {
            if(!txtSearch.getText().isEmpty())
           {
            String searchText = txtSearch.getText();
           
             productCatalog.searchByKeyword(searchText);
              if(!productCatalog.getProd().isEmpty()){
                SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
                userProcessContainer.add("SearchResultJPanel",viewDetails);
                CardLayout layout=(CardLayout)userProcessContainer.getLayout();
                layout.next(userProcessContainer);
              }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
               }
           else
           {
             JOptionPane.showMessageDialog(null,"Enter the search criteria! ");
           } 
            } 
         if(item.equalsIgnoreCase("Feature"))
         {
             if(!txtSearch.getText().isEmpty())
           {
             String searchText = txtSearch.getText();
             
             productCatalog.searchByFeature(searchText);
            
            if(!productCatalog.getProd().isEmpty()){
            SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
            } 
           else
           {
             JOptionPane.showMessageDialog(null,"Enter the search criteria! ");
           } 
         }
         if(item.equalsIgnoreCase("Others"))
         {
             String searchText = txtSearch.getText();
             productCatalog.others(searchText);
             if(!productCatalog.getProd().isEmpty()){
                 SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
             }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
            
    }//GEN-LAST:event_btnSearchActionPerformed
     if(item.equalsIgnoreCase("Product Type"))
         {
             
             String searchText = (String)searchProd.getSelectedItem();
             productCatalog.searchByType(searchText);
             if(!productCatalog.getProd().isEmpty()){
                 SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
             }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
    
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComboBox;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewProductDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> searchProd;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
