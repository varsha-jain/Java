/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphicalinterface;

import business.Product;
import business.ProductCatalog;
import business.Vendor;
import business.VendorCatalog;
import java.awt.CardLayout;
import java.util.ArrayList;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varsha
 */
public class ManageProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageProductJPanel
     */
    private JPanel userProcessContainer;
     private ProductCatalog productCatalog;
  
  
    ManageProductJPanel(JPanel userProcessContainer, ProductCatalog productCatalog) {
      initComponents();
       this.userProcessContainer=userProcessContainer;
        this.productCatalog= productCatalog;
      
        populateTable();
    }

     public void populateTable() 
    {
        
        DefaultTableModel dtm=(DefaultTableModel)tblProduct.getModel();
        dtm.setRowCount(0);
        for(Product product : productCatalog.getProduct())
        {
            Object obj[]= new Object[3];
            obj[0]=product;
            obj[1]=product.getProdName();
            obj[2]=product.getModelNumber();
            
            dtm.addRow(obj);
        }
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnViewProductDetails = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnRemoveProduct = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        JComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        btnBack.setText("<<BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewProductDetails.setText("View Details");
        btnViewProductDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductDetailsActionPerformed(evt);
            }
        });

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Vendor Name", "Product Name", "Model Number"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblProduct);
        if (tblProduct.getColumnModel().getColumnCount() > 0) {
            tblProduct.getColumnModel().getColumn(0).setResizable(false);
            tblProduct.getColumnModel().getColumn(1).setResizable(false);
            tblProduct.getColumnModel().getColumn(2).setResizable(false);
        }

        jScrollPane1.setViewportView(jScrollPane2);

        btnRemoveProduct.setText("Remove Product");
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProductActionPerformed(evt);
            }
        });

        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        JComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vendor Name", "Product Name", "Model Number", "Others" }));
        JComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JComboBoxActionPerformed(evt);
            }
        });
        JComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JComboBoxKeyPressed(evt);
            }
        });

        jLabel1.setText("Search By:");

        jLabel2.setText("Enter details here:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnViewProductDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(JComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemoveProduct, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewProductDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        //userProcessContainer.add("AccountManageWorkAreaJPanel", accountManage);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewProductDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductDetailsActionPerformed
        // TODO add your handling code here:
      
        
         int selectedRow = tblProduct.getSelectedRow();
        if(selectedRow<0)
        {
          JOptionPane.showMessageDialog(null,"Please select any row!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
        Product prod = (Product)tblProduct.getValueAt(selectedRow,0);
        ViewProductJPanel viewProduct= new ViewProductJPanel (userProcessContainer, prod);
        userProcessContainer.add("ViewProductJPanel",viewProduct);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);   
        }
    }//GEN-LAST:event_btnViewProductDetailsActionPerformed

    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProductActionPerformed
        // TODO add your handling code here:
        int selectedRow=tblProduct.getSelectedRow();
       int i= JOptionPane.showConfirmDialog(null,"Do you want to delete?","Delete",JOptionPane.YES_NO_OPTION);
       if(i==0)
        {
       if(selectedRow>=0)
        {
            
            Product product= (Product)tblProduct.getValueAt(selectedRow,0);
            productCatalog.removeProduct(product);
            JOptionPane.showMessageDialog(null,"Product has been deleted");
             
                   populateTable();
            
        }
        else
            JOptionPane.showMessageDialog(null,"Please select any row!","Warning",JOptionPane.WARNING_MESSAGE);
    }
       
     /*   String accountNumber= txtSearch.getText();
        accountDirectory.searchAccount(accountNumber);*/
        
    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
      String item=(String)JComboBox.getSelectedItem();
        
        if(item.equalsIgnoreCase("Product Name"))
        {
           
            productCatalog.searchByName(txtSearch.getText()); 
            if(!productCatalog.getProd().isEmpty()){
            SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
               }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }   
         }
        if(item.equalsIgnoreCase("Model Number"))
        {
           
            productCatalog.searchByModelNumber(txtSearch.getText());
           if(!productCatalog.getProd().isEmpty()){
           SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
               }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            } 
        }
      
       
           if(item.equalsIgnoreCase("Vendor Name"))
           {
            //txtSearch.setEnabled(true);
               productCatalog.searchByVendorName(txtSearch.getText());
           if(!productCatalog.getProd().isEmpty()){
            SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer); 
             }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }  
           }
      
       /*  if(item.equalsIgnoreCase("Lowest Price"))
          {
            Product result = productCatalog.searchByLowestPrice();
            System.out.println(result);
            if(result!=null){
            ViewProductJPanel viewDetails= new ViewProductJPanel (userProcessContainer, result);
            userProcessContainer.add("ViewProductJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer); 
            }else
            {
                JOptionPane.showMessageDialog(null,"No Records Found!");
            }
          }
       
       if(item.equalsIgnoreCase("Keywords"))
         {
             ///txtSearch.setEnabled(true);
             String searchText = txtSearch.getText();
             productCatalog.searchByKeyword(searchText);
            
             if(!productCatalog.getProd().isEmpty()){
            SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
               }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            } 
            }
         if(item.equalsIgnoreCase("Feature"))
         {
             String searchText = txtSearch.getText();
             productCatalog.searchByFeature(searchText);
            
            if(!productCatalog.getProd().isEmpty()){
            SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
               
            }*/
         if(item.equalsIgnoreCase("Others"))
         {
             String searchText = txtSearch.getText();
             productCatalog.others(searchText);
             if(!productCatalog.getProd().isEmpty()){
                 SearchResultJPanel viewDetails= new SearchResultJPanel (userProcessContainer, productCatalog);
            userProcessContainer.add("SearchResultJPanel",viewDetails);
            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
            layout.next(userProcessContainer);
             }else
            {
              JOptionPane.showMessageDialog(null,"No Records Found!");
            }
         }
       
    }//GEN-LAST:event_btnSearchActionPerformed

    private void JComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JComboBoxKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_JComboBoxKeyPressed

    private void JComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JComboBoxActionPerformed

    }//GEN-LAST:event_JComboBoxActionPerformed
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JComboBox;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnViewProductDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
