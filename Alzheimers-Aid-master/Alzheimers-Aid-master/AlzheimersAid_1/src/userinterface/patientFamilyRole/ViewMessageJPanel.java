/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.patientFamilyRole;

import Business.Organization.Organization;
import Business.Organization.PatientFamilyOrganization;
import Business.PatientFamily.PatientFamily;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varsha
 */
public class ViewMessageJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewMessageJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private PatientFamilyOrganization organization;
    public ViewMessageJPanel(JPanel userProcessContainer, UserAccount account, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = (PatientFamilyOrganization) organization;
        populateRequestTable();
    }

    public void populateRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel) viewMessageJTable.getModel();
        model.setRowCount(0);
        //patient sends reply
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[3];
            row[0] = request.getMessage();
            row[1] = request.getReceiver();
            row[1] = request.getSender();
            row[2] = request.getStatus();
            //row[3] = request.getSender();
            model.addRow(row);
        }
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
           for(PatientFamily pf : organization.getPatientFamilyDirectory().getPatientFamilyList()){
           if(pf.getPatient().getNeurologist().getName().equalsIgnoreCase(request.getSender().getEmployee().getName())
                    && pf.getMemberName().equalsIgnoreCase(account.getEmployee().getName())){
            
            Object[] row = new Object[3];
            row[0] = request;
            row[1] = request.getReceiver();
            row[2] = request.getStatus();
            //row[3] = request.getSender();
           // model.addRow(row);
           model.addRow(row);
        }
           }
        
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        viewMessageJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewMessageJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "From", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewMessageJTable);
        if (viewMessageJTable.getColumnModel().getColumnCount() > 0) {
            viewMessageJTable.getColumnModel().getColumn(0).setResizable(false);
            viewMessageJTable.getColumnModel().getColumn(1).setResizable(false);
            viewMessageJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 140, 519, 207));

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel1.setText("My Messages");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 82, 128, 25));

        backJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 11, 90, 36));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = viewMessageJTable.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Select a row!");
            return;
        }
        
        WorkRequest request = (WorkRequest)viewMessageJTable.getValueAt(selectedRow, 0);
        request.setReceiver(account);
        request.setStatus("Pending");
        populateRequestTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable viewMessageJTable;
    // End of variables declaration//GEN-END:variables
}
