/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.caregiver;

import Business.Caregiver.Caregiver;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CareGiverOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientFamilyOrganization;
import Business.Patient.Patient;
import Business.PatientFamily.PatientFamily;
import Business.State.State;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddTasksForPatient;
import Business.WorkQueue.ContactCareGiver;
import Business.WorkQueue.WorkRequest;
import Business.city.City;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nirali Merchant
 */
public class ManageCaregiverTasksJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CaregiverTasksJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private CareGiverOrganization organization;
    private Enterprise enterprise;
    private PatientFamily patientFamily;
    private EcoSystem business;
    public ManageCaregiverTasksJPanel(JPanel userProcessContainer, UserAccount account, CareGiverOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
         this.enterprise = enterprise; 
         this.business = business;
        populateRequestTable();
        patientFamily = new PatientFamily();
    }

    public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) careGiverMessagesJTable.getModel();
        model.setRowCount(0);
        //patient sends reply
        for (WorkRequest request : account.getWorkQueue().getWorkRequestList()) {
            if(request instanceof ContactCareGiver){
            Object[] row = new Object[2];
            row[0] = request.getMessage();
            
            row[1] = request.getStatus();
            
            model.addRow(row);
        }
        }
        //family sends message to caregiver
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            for (State state : business.getStateList()) {
                for (City city : state.getCityList()) {
                    for (Enterprise e : city.getEnterprizeDirectory().getEnterprizeList()) {
                        for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                            for (PatientFamily pf : o.getPatientFamilyDirectory().getPatientFamilyList()) {
                                for (Patient p : o.getPatientDirectory().getPatientList()) {
                                    if (pf.getPatient().getName().equalsIgnoreCase(p.getName())
                                            && p.getCareGiver().getCareGiverName().equalsIgnoreCase(account.getEmployee().getName())
                                            && pf.getMemberName().equalsIgnoreCase(request.getSender().getEmployee().getName())) {
                                        Object[] row = new Object[4];
                                        row[0] = request;

                                        row[1] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                                        row[2] = request.getStatus();
                                        row[3] = request.getSender().getEmployee().getName();

                                        model.addRow(row);
                                        break;
                                    }
                                }

                            }
                        }

                    }
                }
            }
        }

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        careGiverMessagesJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        completeTaskJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        careGiverMessagesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(careGiverMessagesJTable);
        if (careGiverMessagesJTable.getColumnModel().getColumnCount() > 0) {
            careGiverMessagesJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 159, 490, 172));

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel1.setText("Your Messages!");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 106, 147, 27));

        backJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 25, 107, 31));

        completeTaskJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        completeTaskJButton.setText("Complete");
        completeTaskJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeTaskJButtonActionPerformed(evt);
            }
        });
        add(completeTaskJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 363, 163, 41));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void completeTaskJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeTaskJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = careGiverMessagesJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        ContactCareGiver request = (ContactCareGiver)careGiverMessagesJTable.getValueAt(selectedRow, 0);
        request.setTestResult("Completed");
        request.setStatus("Completed");
        populateRequestTable();
    }//GEN-LAST:event_completeTaskJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable careGiverMessagesJTable;
    private javax.swing.JButton completeTaskJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
