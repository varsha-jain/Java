/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.nurseRole;

import Business.Patient.Patient;
import Business.WorkQueue.NeurologistToNurseFallWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varsha
 */
public class ViewTasksJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewTasksJPanel
     */
    private JPanel userProcessContainer;
    private NeurologistToNurseFallWorkRequest request;
    private String patientName;
    

    ViewTasksJPanel(JPanel userProcessContainer, NeurologistToNurseFallWorkRequest request, String patientName) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.patientName = patientName; 
        populateTable();
    }

    
    public void populateTable()
    {
        DefaultTableModel model = (DefaultTableModel)pendingTaskJTable.getModel();
        
        model.setRowCount(0);
       for (Patient p : request.getPatientList())
       {
           Object[] row = new Object[2];
       
            row[0] = p;
            row[1] = p.getRiskFallPriority();
         //   row[1] = request.getSender().getEmployee().getName();
            
            model.addRow(row);
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pendingTaskJTable = new javax.swing.JTable();
        calculateRiskJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pendingTaskJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Priority"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pendingTaskJTable);
        if (pendingTaskJTable.getColumnModel().getColumnCount() > 0) {
            pendingTaskJTable.getColumnModel().getColumn(0).setResizable(false);
            pendingTaskJTable.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 80, -1, 139));

        calculateRiskJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        calculateRiskJButton.setText("Calculate Risk Of Falling");
        calculateRiskJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateRiskJButtonActionPerformed(evt);
            }
        });
        add(calculateRiskJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 245, 249, 35));

        backJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 11, 85, 33));
    }// </editor-fold>//GEN-END:initComponents

    private void calculateRiskJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateRiskJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = pendingTaskJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

    Patient  p =(Patient)pendingTaskJTable.getValueAt(selectedRow, 0);

        
        CalculateRiskOfFallingJPanel crfjp = new CalculateRiskOfFallingJPanel(userProcessContainer, request, p);
        userProcessContainer.add("CalculateRiskOfFallingJPanel",crfjp);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_calculateRiskJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton calculateRiskJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pendingTaskJTable;
    // End of variables declaration//GEN-END:variables
}
