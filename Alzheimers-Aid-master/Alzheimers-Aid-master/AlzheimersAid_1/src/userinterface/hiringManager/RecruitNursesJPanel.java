/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.hiringManager;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Nurse.Nurse;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.Organization.VolunteerOrganization;
import Business.State.State;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AddTasksForPatient;
import Business.WorkQueue.ChiefNurseToVolunteer;
import Business.WorkQueue.WorkRequest;
import Business.city.City;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varsha
 */
public class RecruitNursesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RecruitNursesJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount account;
    public RecruitNursesJPanel(JPanel userProcessContainer, EcoSystem business, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.account = account;
        populateTable();
    }

    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel)nurseListJTable.getModel();
        dtm.setRowCount(0);
        ArrayList<Nurse> temp = new ArrayList<Nurse>();
        for(WorkRequest workRequest : account.getWorkQueue().getWorkRequestList() )
        {
            Object[] row = new Object[4];
            temp = ((ChiefNurseToVolunteer) workRequest).getNurseList();
            for (State state : business.getStateList()) {
                for (City city : state.getCityList()) {
                    for (Enterprise e : city.getEnterprizeDirectory().getEnterprizeList()) {
                        for (Organization org : e.getOrganizationDirectory().getOrganizationList()) {
                            for(Nurse nurse : temp)
                            {
                               row[0]=nurse;
                               row[1]=nurse.getNoOfYearsExp();
                               boolean status =nurse.isAvailability();
                               if(status == true)
                                   row[2] = "Available";
                               else
                                   row[2] = "Not Available";
                               if(status == false)
                                    row[3]= "Not yet Completed";
                               else
                                   row[3]="Completed";
                            }
                        }

                    }
                }
            }
             dtm.addRow(row);
        }
       
               
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        searchCriteriaJComboBox = new javax.swing.JComboBox<>();
        searchJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        nurseListJTable = new javax.swing.JTable();
        viewDetailsJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        YearExpJTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel1.setText("Begin your search of Nurses here!");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 33, 250, 25));

        searchCriteriaJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Years Of Experience", "Immediate Availability", "All Nurses" }));
        searchCriteriaJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCriteriaJComboBoxActionPerformed(evt);
            }
        });
        add(searchCriteriaJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 109, 143, 37));

        searchJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        searchJButton.setText("Search");
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });
        add(searchJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 109, 134, 37));

        nurseListJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Years Of Experience", "Availability", "Training Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(nurseListJTable);
        if (nurseListJTable.getColumnModel().getColumnCount() > 0) {
            nurseListJTable.getColumnModel().getColumn(0).setResizable(false);
            nurseListJTable.getColumnModel().getColumn(1).setResizable(false);
            nurseListJTable.getColumnModel().getColumn(2).setResizable(false);
            nurseListJTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 475, 142));

        viewDetailsJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        viewDetailsJButton.setText("View Details");
        viewDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsJButtonActionPerformed(evt);
            }
        });
        add(viewDetailsJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 161, 41));

        backJButton.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 20, 91, 38));

        YearExpJTextField.setEnabled(false);
        add(YearExpJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 108, 143, 38));

        jLabel2.setFont(new java.awt.Font("Corbel", 2, 12)); // NOI18N
        jLabel2.setText("Minimum No.of Years of Exp");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, 169, 20));

        jLabel3.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel3.setText("List of Nurses-");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 210, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = nurseListJTable.getSelectedRow();
        if(selectedRow<0)
        {
          JOptionPane.showMessageDialog(null,"Please select any row!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
        Nurse nurse = (Nurse)nurseListJTable.getValueAt(selectedRow,0);
         ViewNurseDetailsJPanel vndjp = new ViewNurseDetailsJPanel(userProcessContainer, nurse, account, business);
        userProcessContainer.add("ViewNurseDetailsJPanel",vndjp);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);  
        }
        
    }//GEN-LAST:event_viewDetailsJButtonActionPerformed

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJButtonActionPerformed
        // TODO add your handling code here:
        //populate table code based on search criteria
        String get_text = (String)searchCriteriaJComboBox.getSelectedItem();
        String sendText= " ";
        if(get_text.equalsIgnoreCase("Years Of Experience"))
        {
            //YearExpJTextField.setEnabled(true);
            String message = YearExpJTextField.getText();
            sendText = "Experienced" + " " + message;
        }
        ChiefNurseToVolunteer request = new ChiefNurseToVolunteer();
        if(!(get_text.equalsIgnoreCase("Years Of Experience")))
        {
          request.setMessage(get_text);
          request.setSender(account);
          request.setStatus("Sent");
        }
        if(get_text.equalsIgnoreCase("Years Of Experience")){
          request.setMessage(sendText);
          request.setSender(account);
          request.setStatus("Sent");
        }
        Organization o = null;
        for(State state : business.getStateList())
        {
            for(City city : state.getCityList())
            {
                for(Enterprise e : city.getEnterprizeDirectory().getEnterprizeList())
                {
                    for(Organization org : e.getOrganizationDirectory().getOrganizationList())
                    {
                        if (org instanceof VolunteerOrganization) {
                                o = org;
                                break;
                            
                        }
                    }
                        
                }
            }
        }
        if (o!=null){
            o.getWorkQueue().getWorkRequestList().add(request);
            account.getWorkQueue().getWorkRequestList().add(request);
        }
        YearExpJTextField.setText(" ");
    }//GEN-LAST:event_searchJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void searchCriteriaJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCriteriaJComboBoxActionPerformed
        // TODO add your handling code here:
         if(searchCriteriaJComboBox.getSelectedItem().toString().equalsIgnoreCase("Years Of Experience"))
              YearExpJTextField.setEnabled(true);
             
    }//GEN-LAST:event_searchCriteriaJComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField YearExpJTextField;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable nurseListJTable;
    private javax.swing.JComboBox<String> searchCriteriaJComboBox;
    private javax.swing.JButton searchJButton;
    private javax.swing.JButton viewDetailsJButton;
    // End of variables declaration//GEN-END:variables
}
